{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport NavItem from './NavItem';\nimport { useClassNames } from '../utils';\nimport { NavbarContext } from '../Navbar/Navbar';\nimport { SidenavContext } from '../Sidenav/Sidenav';\nimport NavContext from './NavContext';\nimport useEnsuredRef from '../utils/useEnsuredRef';\nimport Menubar from '../Menu/Menubar';\nimport NavDropdown from './NavDropdown';\nimport NavMenu, { NavMenuActionType, NavMenuContext } from './NavMenu';\nimport deprecateComponent from '../utils/deprecateComponent';\nimport NavDropdownItem from './NavDropdownItem';\nimport NavDropdownMenu from './NavDropdownMenu';\nimport NavbarDropdownItem from '../Navbar/NavbarDropdownItem';\nimport SidenavDropdownItem from '../Sidenav/SidenavDropdownItem';\nimport NavbarItem from '../Navbar/NavbarItem';\nimport SidenavItem from '../Sidenav/SidenavItem';\nimport useInternalId from '../utils/useInternalId';\nvar Nav = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'nav' : _props$classPrefix,\n    _props$appearance = props.appearance,\n    appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n    vertical = props.vertical,\n    justified = props.justified,\n    reversed = props.reversed,\n    pullRight = props.pullRight,\n    className = props.className,\n    children = props.children,\n    activeKeyProp = props.activeKey,\n    onSelectProp = props.onSelect,\n    rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"appearance\", \"vertical\", \"justified\", \"reversed\", \"pullRight\", \"className\", \"children\", \"activeKey\", \"onSelect\"]);\n  var sidenav = useContext(SidenavContext); // Whether inside a <Navbar>\n\n  var navbar = useContext(NavbarContext);\n  var menubarRef = useEnsuredRef(ref);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge,\n    rootPrefix = _useClassNames.rootPrefix,\n    prefix = _useClassNames.prefix;\n  var classes = merge(className, rootPrefix({\n    'navbar-nav': navbar,\n    'navbar-right': pullRight,\n    'sidenav-nav': sidenav\n  }), withClassPrefix(appearance, {\n    horizontal: navbar || !vertical && !sidenav,\n    vertical: vertical || sidenav,\n    justified: justified,\n    reversed: reversed\n  }));\n  var _ref = sidenav || {},\n    activeKeyFromSidenav = _ref.activeKey,\n    _ref$onSelect = _ref.onSelect,\n    onSelectFromSidenav = _ref$onSelect === void 0 ? onSelectProp : _ref$onSelect;\n  var activeKey = activeKeyProp !== null && activeKeyProp !== void 0 ? activeKeyProp : activeKeyFromSidenav;\n  var contextValue = useMemo(function () {\n    return {\n      activeKey: activeKey,\n      onSelect: onSelectProp !== null && onSelectProp !== void 0 ? onSelectProp : onSelectFromSidenav\n    };\n  }, [activeKey, onSelectFromSidenav, onSelectProp]);\n  if (sidenav !== null && sidenav !== void 0 && sidenav.expanded) {\n    return /*#__PURE__*/React.createElement(NavContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n      ref: ref,\n      className: classes\n    }, rest), children));\n  }\n  var hasWaterline = appearance !== 'default'; // If inside a collapsed <Sidenav>, render an ARIA `menubar` (vertical)\n\n  if (sidenav) {\n    return /*#__PURE__*/React.createElement(NavContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Menubar, {\n      vertical: !!sidenav\n    }, function (menubar, ref) {\n      return /*#__PURE__*/React.createElement(Component, _extends({\n        ref: ref\n      }, rest, {\n        className: classes\n      }, menubar), children);\n    }));\n  }\n  return /*#__PURE__*/React.createElement(NavContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: menubarRef,\n    className: classes\n  }), children, hasWaterline && /*#__PURE__*/React.createElement(\"div\", {\n    className: prefix('bar')\n  })));\n});\nvar DeprecatedNavDropdown = deprecateComponent(NavDropdown, '<Nav.Dropdown> is deprecated, use <Nav.Menu> instead.');\nDeprecatedNavDropdown.Menu = deprecateComponent(NavDropdownMenu, '<Nav.Dropdown.Menu> is deprecated, use <Nav.Menu> instead');\nDeprecatedNavDropdown.Item = deprecateComponent(NavDropdownItem, '<Nav.Dropdown.Item> is deprecated, use <Nav.Item> instead');\nNav.Dropdown = DeprecatedNavDropdown;\n/**\n * The <Nav.Item> API\n * When used as direct child of <Nav>, render the NavItem\n * When used within a <Nav.Menu>, render the NavDropdownItem\n */\n\nNav.Item = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var nav = useContext(NavContext);\n  if (!nav) {\n    throw new Error('<Nav.Item> must be rendered within a <Nav> component.');\n  }\n  var parentNavMenu = useContext(NavMenuContext);\n  var navbar = useContext(NavbarContext);\n  var sidenav = useContext(SidenavContext);\n  var _ref2 = parentNavMenu !== null && parentNavMenu !== void 0 ? parentNavMenu : [],\n    dispatch = _ref2[1];\n  var _id = useInternalId('Nav.Item');\n  useEffect(function () {\n    if (dispatch) {\n      var _props$active;\n      dispatch({\n        type: NavMenuActionType.RegisterItem,\n        payload: {\n          _id: _id,\n          eventKey: props.eventKey,\n          active: (_props$active = props.active) !== null && _props$active !== void 0 ? _props$active : false\n        }\n      });\n      return function () {\n        dispatch({\n          type: NavMenuActionType.UnregisterItem,\n          payload: {\n            _id: _id\n          }\n        });\n      };\n    }\n  }, [dispatch, _id, props.eventKey, props.active]);\n  if (parentNavMenu) {\n    if (navbar) {\n      return /*#__PURE__*/React.createElement(NavbarDropdownItem, _extends({\n        ref: ref\n      }, props));\n    }\n    if (sidenav) {\n      return /*#__PURE__*/React.createElement(SidenavDropdownItem, _extends({\n        ref: ref\n      }, props));\n    }\n    return /*#__PURE__*/React.createElement(NavDropdownItem, _extends({\n      ref: ref\n    }, props));\n  }\n  if (navbar) {\n    return /*#__PURE__*/React.createElement(NavbarItem, _extends({\n      ref: ref\n    }, props));\n  }\n  if (sidenav) {\n    return /*#__PURE__*/React.createElement(SidenavItem, _extends({\n      ref: ref\n    }, props));\n  }\n  return /*#__PURE__*/React.createElement(NavItem, _extends({\n    ref: ref\n  }, props));\n});\nNav.Item.displayName = 'Nav.Item';\nNav.Menu = NavMenu;\nNav.displayName = 'Nav';\nNav.propTypes = {\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  appearance: PropTypes.oneOf(['default', 'subtle', 'tabs']),\n  // Reverse Direction of tabs/subtle\n  reversed: PropTypes.bool,\n  justified: PropTypes.bool,\n  vertical: PropTypes.bool,\n  pullRight: PropTypes.bool,\n  activeKey: PropTypes.any,\n  onSelect: PropTypes.func\n};\nexport default Nav;","map":null,"metadata":{},"sourceType":"module"}