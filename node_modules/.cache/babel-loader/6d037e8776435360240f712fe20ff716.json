{"ast":null,"code":"import { useState, useCallback, useRef } from 'react';\nimport { useUpdateEffect } from '../utils';\nvar useCalendarDate = function useCalendarDate(value, defaultDate) {\n  var _ref;\n  var valueRef = useRef(value);\n  var _useState = useState((_ref = value !== null && value !== void 0 ? value : defaultDate) !== null && _ref !== void 0 ? _ref : new Date()),\n    calendarDate = _useState[0],\n    setValue = _useState[1];\n  var setCalendarDate = useCallback(function (date) {\n    if (date && (date === null || date === void 0 ? void 0 : date.valueOf()) !== (calendarDate === null || calendarDate === void 0 ? void 0 : calendarDate.valueOf())) {\n      setValue(date);\n    }\n  }, [calendarDate]);\n  var resetCalendarDate = useCallback(function () {\n    var _ref2;\n    setValue((_ref2 = value !== null && value !== void 0 ? value : defaultDate) !== null && _ref2 !== void 0 ? _ref2 : new Date());\n  }, [defaultDate, value]);\n  useUpdateEffect(function () {\n    var _valueRef$current;\n    if ((value === null || value === void 0 ? void 0 : value.valueOf()) !== ((_valueRef$current = valueRef.current) === null || _valueRef$current === void 0 ? void 0 : _valueRef$current.valueOf())) {\n      setCalendarDate(value !== null && value !== void 0 ? value : new Date());\n      valueRef.current = value;\n    }\n  }, [value]);\n  return {\n    calendarDate: calendarDate,\n    setCalendarDate: setCalendarDate,\n    resetCalendarDate: resetCalendarDate\n  };\n};\nexport default useCalendarDate;","map":null,"metadata":{},"sourceType":"module"}