{"ast":null,"code":"import { addMonths, isSameDay, shouldRenderTime, isSameSecond, startOfMonth, endOfMonth, startOfISOWeek, endOfISOWeek, startOfWeek, endOfWeek, differenceInCalendarMonths, copyTime } from '../utils/dateUtils';\nexport function getSafeCalendarDate(_ref) {\n  var _value;\n  var value = _ref.value,\n    _ref$calendarKey = _ref.calendarKey,\n    calendarKey = _ref$calendarKey === void 0 ? 'start' : _ref$calendarKey;\n  // Update calendarDate if the value is not null\n  value = (_value = value) !== null && _value !== void 0 ? _value : [];\n  if (value[0] && value[1]) {\n    var diffMonth = differenceInCalendarMonths(value[1], value[0]);\n    if (calendarKey === 'start') {\n      return [value[0], diffMonth <= 0 ? copyTime({\n        from: value[1],\n        to: addMonths(value[0], 1)\n      }) : value[1]];\n    } else if (calendarKey === 'end') {\n      return [diffMonth <= 0 ? copyTime({\n        from: value[0],\n        to: addMonths(value[1], -1)\n      }) : value[0], value[1]];\n    } // If only the start date\n  } else if (value[0]) {\n    return [value[0], addMonths(value[0], 1)];\n  }\n  var todayDate = new Date();\n  return [todayDate, addMonths(todayDate, 1)];\n}\nexport var isSameRange = function isSameRange(source, dest, format) {\n  // If both are null, reguard as same\n  if (null === source && null === dest) return true; // If only one is null, regard as different\n\n  if (null === source || null === dest) return false;\n  var result = isSameDay(source[0], dest[0]) && isSameDay(source[1], dest[1]);\n  if (shouldRenderTime(format)) {\n    result && (result = isSameSecond(source[0], dest[0]) && isSameSecond(source[1], dest[1]));\n  }\n  return result;\n};\nexport var getMonthHoverRange = function getMonthHoverRange(date) {\n  return [startOfMonth(date), endOfMonth(date)];\n};\nexport var getWeekHoverRange = function getWeekHoverRange(isoWeek, date) {\n  if (isoWeek) {\n    // set to the first day of this week according to ISO 8601, 12:00 am\n    return [startOfISOWeek(date), endOfISOWeek(date)];\n  }\n  return [startOfWeek(date), endOfWeek(date)];\n};","map":null,"metadata":{},"sourceType":"module"}